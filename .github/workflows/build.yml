name: Cross-Platform Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  NPM_CONFIG_TIMEOUT: 60000  # 将超时设置移至全局环境变量

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust-target: x86_64-apple-darwin
          - os: windows-latest
            rust-target: x86_64-pc-windows-msvc
            shell: pwsh  # 为 Windows 指定专用 shell

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: npm  # 启用缓存提升安装速度

    - name: Install project dependencies
      run: |
        npm clean-install --legacy-peer-deps --prefer-offline --no-audit
        npm set audit false  # 禁用自动安全审计
        # 手动更新有漏洞的依赖
        npm install tough-cookie@^4.1.3 ws@^8.17.1

    - name: Build application
      shell: bash
      run: npm run tauri:build
      if: runner.os != 'Windows'  # Windows 需要特殊处理

    - name: Build application (Windows)
      shell: pwsh
      run: npm run tauri:build
      if: runner.os == 'Windows'

    - name: Package artifacts
      run: npx tauri build --target ${{ matrix.rust-target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-${{ matrix.os }}
        path: |
          src-tauri/target/release/*
          !src-tauri/target/release/*.d